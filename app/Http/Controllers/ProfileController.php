<?php

namespace App\Http\Controllers;

use App\Rules\MatchOldPassword;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rule;
use App\User;
use App\Cities;

class ProfileController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }

    public function index()
    {
        return view('dashboard.profile')->with(
            [
                'user' => Auth::user(),
                'cities' => Cities::all()
            ]
        );
    }

    public function saveDetails(Request $request)
    {
        $user = Auth::user();

        $validatedData = $request->validate([
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'email', 'max:255', Rule::unique('users')->ignore($user)],
            'address' => ['string', 'max:255'],
            'cities' => ['int', 'exists:cities,id'],
            'postal_code' => ['int', 'min:1000', 'max:9999']
        ]);

        $user->first_name = ucwords(strtolower($request->post('first_name')));
        $user->last_name = ucwords(strtolower($request->post('last_name')));
        $user->email = $request->post('email');
        $user->phone = $request->post('phone');
        $user->description = $request->post('description');
        $user->address = $request->post('address');
        $user->postal_code = $request->post('postal_code');
        $user->city = $request->post('city');

        $user->save();

        return redirect()->route('dashboard/profile')->with('message', __('Your profile has been updated.'));
    }

    public function savePassword(Request $request)
    {
        $user = Auth::user();

        if($user->password_autogenerated) {
            $validatedData = $request->validate([
                'new_password' => ['required'],
                'confirm_new_password' => ['required', 'same:new_password']
            ]);
        } else {
            $validatedData = $request->validate([
                'current_password' => ['required', new MatchOldPassword],
                'new_password' => ['required'],
                'confirm_new_password' => ['required', 'same:new_password']
            ]);
        }

        User::find(Auth::user()->id)->update([
            'password' => Hash::make($request->new_password),
            'password_autogenerated' => false
        ]);

        return redirect()->route('dashboard/profile')->with('message', __('Your password has been updated.'));
    }
}
